# For more info re: vercel action see:
# https://github.com/amondnet/vercel-action

name: Leptos CSR Vercel Preview

on:
  pull_request:
    branches: ["main"]

  workflow_dispatch:
env:
  CARGO_TERM_COLOR: always
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

jobs:
  jspackages:
    name: Js Packages
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install pnpm
        run: npm install -g pnpm

      - name: Install dependencies
        run: make install

      - name: Install JS packages dependencies
        run: make jspackages-install

      - name: Build JS packages
        run: make jspackages-build

      - name: Build tailwindcss
        run: make tailwindcss-build

      - name: Upload jspackages bundles
        uses: actions/upload-artifact@v4
        with:
          name: js-bundles
          path: jspackages/bundles/
          retention-days: 1

      - name: Upload CSS artifacts
        uses: actions/upload-artifact@v4
        with:
          name: css-artifacts
          path: |
            style/output.css
            style/tailwind.css
          retention-days: 1

  fmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@nightly
        with:
          components: rustfmt
      - name: Enforce formatting
        run: cargo fmt --check

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    needs: [jspackages]
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@nightly
        with:
          components: clippy
      - uses: Swatinem/rust-cache@v2

      - name: Download jspackages bundles
        uses: actions/download-artifact@v4
        with:
          name: js-bundles
          path: jspackages/bundles/

      - name: Linting
        run: cargo clippy -- -D warnings

  test:
    name: Test
    runs-on: ubuntu-latest
    needs: [fmt, clippy]
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@nightly
      - uses: Swatinem/rust-cache@v2

      - name: Download jspackages bundles
        uses: actions/download-artifact@v4
        with:
          name: js-bundles
          path: jspackages/bundles/

      - name: Run tests
        run: cargo test

  build-and-preview-deploy:
    runs-on: ubuntu-latest
    name: Build and Preview

    needs: [jspackages, test, clippy, fmt]

    permissions:
      pull-requests: write

    environment:
      name: preview
      url: ${{ steps.preview.outputs.preview-url }}

    steps:
      - name: git-checkout
        uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@nightly
      - uses: Swatinem/rust-cache@v2

      - name: Download jspackages bundles
        uses: actions/download-artifact@v4
        with:
          name: js-bundles
          path: jspackages/bundles/

      - name: Download CSS artifacts
        uses: actions/download-artifact@v4
        with:
          name: css-artifacts
          path: style/

      - name: Build
        run: rustup target add wasm32-unknown-unknown
      - name: Download and install Trunk binary
        run: wget -qO- https://github.com/trunk-rs/trunk/releases/download/v0.21.7/trunk-x86_64-unknown-linux-gnu.tar.gz | tar -xzf-

      - name: Build with Trunk
        run: ./trunk build --release

      - name: Copy vercel.json to dist
        run: cp ./vercel.json ./dist/vercel.json

      - name: Preview Deploy
        id: preview
        uses: amondnet/vercel-action@v25.1.1
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          github-comment: true
          working-directory: ./dist
      - name: Display Deployed URL
        run: |
          echo "Deployed app URL: ${{ steps.preview.outputs.preview-url }}" >> $GITHUB_STEP_SUMMARY
